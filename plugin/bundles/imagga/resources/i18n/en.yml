bundle_name: "Imagga"
bundle_description: "The Imagga API is a set of image understanding and analysis technologies available as a web service that allows you to automate the process of analyzing, organizing and searching through large collections of unstructured images."
credential_imagga_api_key_description: "API Key for authentication. Get it from https://imagga.com/profile/dashboard"
credential_imagga_api_secret_description: "API Secret for authentication. Get it from https://imagga.com/profile/dashboard"
image_crop_input_image_url_name: "Image URL"
image_crop_input_image_url_description: "Image URL to perform smart-cropping on."
image_crop_input_resolution_name: "Resolution"
image_crop_input_resolution_description: "Resolution pair in the form (width)x(height) where ‘x’ is just the small letter x. You can provide several resolutions just by providing several resolution pairs separated with a comma. If you omit this parameter, the API will still suggest the best cropping coordinates so everything that matters in the photo scene is preserved. Example: 100x100,500x300"
image_crop_output_result_name: "Result"
image_crop_output_result_description: "Cropped image parameter"
image_crop_name: "Image Crop"
image_crop_description: "The technology behind this endpoint analyzes the pixel content of each given image in order to find the most “visually important” areas in the image. Having this information and eventually some constraints, it can suggest the best cropping automatically."
color_analysis_input_image_url_name: "Image URL"
color_analysis_input_image_url_description: "Image URL to perform color-extraction on."
color_analysis_input_extract_overall_colors_name: "Extract Overall Colors"
color_analysis_input_extract_overall_colors_description: "Specify whether the overall image colors should be extracted. The possible values are 1 for 'yes’, and 0 for 'no’."
color_analysis_input_extract_object_colors_name: "Extract Object Colors"
color_analysis_input_extract_object_colors_description: "Specify if the service should try to extract object and non-object (a.k.a. foreground and background) colors separately. The possible values are 1 for 'yes’, and 0 for 'no’."
color_analysis_input_overall_count_name: "Overall Count"
color_analysis_input_overall_count_description: "Specify the number of overall image colors the service should try to extract."
color_analysis_output_result_name: "Result"
color_analysis_output_result_description: "The information about the color analysis of the image."
color_analysis_name: "Color Analysis"
color_analysis_description: "Analyse and extract the predominant colors from images."
faces_detection_input_image_url_name: "Image URL"
faces_detection_input_image_url_description: "URL of an image to submit for face detection."
faces_detection_input_return_face_id_name: "Return Face ID"
faces_detection_input_return_face_id_description: "Set it to a value of 1 if you want the system to generate a face_id for each face detected on the image. The face_id can be used with faces_similarity plugin for faces."
faces_detection_output_result_name: "Result"
faces_detection_output_result_description: "The information about the face detection of the image."
faces_detection_name: "Faces Detection"
faces_detection_description: "The face detection endpoint will detect human faces in an image and the response may includes the face_id, which will be used in the faces_similarity plugin."
faces_similarity_input_face_id_name: "Face ID"
faces_similarity_input_face_id_description: "The face ID of the first face as generated by the faces_detection plugin. Keep in mind that the face IDs are saved for 24h after detection."
faces_similarity_input_second_face_id_name: "Second Face ID"
faces_similarity_input_second_face_id_description: "The face ID of the second face as generated by the faces_detection plugin. Keep in mind that the face IDs are saved for 24h after detection."
faces_similarity_output_score_name: "Score"
faces_similarity_output_score_description: "A number between 0 and 100 representing the similarity score of the two faces."
faces_similarity_name: "Faces Similarity"
faces_similarity_description: "Use this endpoint if you want to compare two faces and see how visually similar they are."
